[{"E:\\New folder\\pipes-task\\pipes-task\\src\\index.tsx":"1","E:\\New folder\\pipes-task\\pipes-task\\src\\reportWebVitals.ts":"2","E:\\New folder\\pipes-task\\pipes-task\\src\\App.tsx":"3","E:\\New folder\\pipes-task\\pipes-task\\src\\engine.ts":"4","E:\\New folder\\pipes-task\\pipes-task\\src\\components\\options\\Options.tsx":"5","E:\\New folder\\pipes-task\\pipes-task\\src\\components\\header\\Header.tsx":"6","E:\\New folder\\pipes-task\\pipes-task\\src\\components\\rules\\Rules.tsx":"7","E:\\New folder\\pipes-task\\pipes-task\\src\\components\\cell\\Cell.tsx":"8","E:\\New folder\\pipes-task\\pipes-task\\src\\components\\fancyGrid\\FancyGrid.tsx":"9","E:\\New folder\\pipes-task\\pipes-task\\src\\components\\simpleGrid\\SimpleGrid.tsx":"10","E:\\New folder\\pipes-task\\pipes-task\\src\\components\\spinner\\Spinner.tsx":"11","E:\\New folder\\pipes-task\\pipes-task\\src\\components\\slider\\Slider.tsx":"12","E:\\New folder\\pipes-task\\pipes-task\\src\\components\\button\\Button.tsx":"13","E:\\New folder\\pipes-task\\pipes-task\\src\\components\\resultsTable\\ResultsTable.tsx":"14","E:\\New folder\\pipes-task\\pipes-task\\src\\components\\verify\\Verify.tsx":"15"},{"size":296,"mtime":1614208786438,"results":"16","hashOfConfig":"17"},{"size":425,"mtime":499158900000,"results":"18","hashOfConfig":"17"},{"size":10365,"mtime":1614539970757,"results":"19","hashOfConfig":"17"},{"size":20182,"mtime":1614536198505,"results":"20","hashOfConfig":"17"},{"size":1980,"mtime":1614539377267,"results":"21","hashOfConfig":"17"},{"size":851,"mtime":1614533979257,"results":"22","hashOfConfig":"17"},{"size":1502,"mtime":1614456155579,"results":"23","hashOfConfig":"17"},{"size":1063,"mtime":1614533442739,"results":"24","hashOfConfig":"17"},{"size":1787,"mtime":1614533343770,"results":"25","hashOfConfig":"17"},{"size":2038,"mtime":1614539916504,"results":"26","hashOfConfig":"17"},{"size":596,"mtime":1614533661341,"results":"27","hashOfConfig":"17"},{"size":794,"mtime":1614431873439,"results":"28","hashOfConfig":"17"},{"size":482,"mtime":1614505042883,"results":"29","hashOfConfig":"17"},{"size":1839,"mtime":1614510390746,"results":"30","hashOfConfig":"17"},{"size":1582,"mtime":1614521490984,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1ctwnvw",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"E:\\New folder\\pipes-task\\pipes-task\\src\\index.tsx",[],["66","67"],"E:\\New folder\\pipes-task\\pipes-task\\src\\reportWebVitals.ts",[],"E:\\New folder\\pipes-task\\pipes-task\\src\\App.tsx",["68"],"E:\\New folder\\pipes-task\\pipes-task\\src\\engine.ts",["69"],"E:\\New folder\\pipes-task\\pipes-task\\src\\components\\options\\Options.tsx",[],"E:\\New folder\\pipes-task\\pipes-task\\src\\components\\header\\Header.tsx",["70"],"import React, { useState, useEffect } from \"react\";\nimport Button from \"../button/Button\";\nimport style from \"./header.module.scss\";\nimport Rules from \"./../rules/Rules\";\n\nconst Header = () => {\n  const [showRules, setShowRules] = useState(false);\n  return (\n    <>\n      <Rules showRules={showRules} onRulesClick={() => setShowRules(false)} />\n\n      <div className='row'>\n        <div className='col-sm-9 col-xs-12'>\n          <h1 className={style.heading}>PIPE GAME</h1>\n        </div>\n        <div className='col-xs-3 center-xs middle-xs'>\n          {!showRules && (\n            <div className={style.buttonWrapper}>\n              <Button size='medium' onClick={() => setShowRules(!showRules)}>\n                How to play\n              </Button>\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Header;\n","E:\\New folder\\pipes-task\\pipes-task\\src\\components\\rules\\Rules.tsx",[],"E:\\New folder\\pipes-task\\pipes-task\\src\\components\\cell\\Cell.tsx",[],"E:\\New folder\\pipes-task\\pipes-task\\src\\components\\fancyGrid\\FancyGrid.tsx",[],"E:\\New folder\\pipes-task\\pipes-task\\src\\components\\simpleGrid\\SimpleGrid.tsx",[],"E:\\New folder\\pipes-task\\pipes-task\\src\\components\\spinner\\Spinner.tsx",[],"E:\\New folder\\pipes-task\\pipes-task\\src\\components\\slider\\Slider.tsx",["71"],"import React, { FC, useState } from \"react\";\nimport style from \"./slider.module.scss\";\n\ntype Props = {\n  min: number;\n  max: number;\n  value: number;\n  onChange: (value: number) => void;\n};\n\nconst Slider: FC<Props> = ({ min = 0, max = 4, value, onChange }) => {\n  return (\n    <div className='row'>\n      <div className='col-xs-2 end-xs col-xs-offset-1'>slower</div>\n      <div className='col-xs-6'>\n        <div className={style.slider}>\n          <input\n            className={style.range}\n            type='range'\n            min={min}\n            max={max}\n            value={value}\n            onChange={(e) => onChange(parseInt(e.target.value, 10))}\n          />\n        </div>\n      </div>\n      <div className='col-xs-2 start-xs'>faster</div>\n    </div>\n  );\n};\n\nexport default Slider;\n","E:\\New folder\\pipes-task\\pipes-task\\src\\components\\button\\Button.tsx",[],"E:\\New folder\\pipes-task\\pipes-task\\src\\components\\resultsTable\\ResultsTable.tsx",["72"],"import React, { FC, useEffect, useState } from \"react\";\nimport { WhatRender } from \"../../App\";\nimport style from \"./resultsTable.module.scss\";\n\ntype Props = {\n  verifyResponde: string;\n  currentLevel: number;\n  levels: number[];\n  whatRender: WhatRender;\n};\ninterface Results {\n  level: number;\n  password: string;\n}\nconst ResultsTable: FC<Props> = ({\n  verifyResponde,\n  currentLevel,\n  levels,\n  whatRender,\n}) => {\n  const [results, setResults] = useState<Results[]>([]);\n  const { levelsBtns, startGameBtn } = whatRender;\n  useEffect(() => {\n    const resultArr = levels.map((level) => {\n      return {\n        level,\n        password: \"\",\n      };\n    });\n    const storagePipes = JSON.parse(localStorage.pipesGame || \"[]\");\n    if (storagePipes.length) {\n      setResults(storagePipes);\n    } else {\n      setResults(resultArr);\n    }\n    if (verifyResponde.startsWith(\"verify: Correct\")) {\n      const resultsCopy = [...results];\n      const password = verifyResponde.split(\"verify: Correct! Password: \");\n      resultsCopy[currentLevel - 1].password = password[1];\n      setResults(resultsCopy);\n      localStorage.pipesGame = JSON.stringify(resultsCopy);\n    }\n    \n  }, [verifyResponde]);\n\n  return (\n    <>\n      {(startGameBtn || levelsBtns) && (\n        <div className={style.results}>\n          <table>\n            <thead>\n              <tr>\n                <th>Level</th>\n                <th>Password</th>\n              </tr>\n            </thead>\n            <tbody>\n              {results.map(({ level, password }, index) => (\n                <tr key={level} className={password && style.done}>\n                  <td>{index + 1}</td>\n                  <td>{password}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ResultsTable;\n","E:\\New folder\\pipes-task\\pipes-task\\src\\components\\verify\\Verify.tsx",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":126,"column":6,"nodeType":"79","endLine":126,"endColumn":26,"suggestions":"80"},{"ruleId":"81","severity":1,"message":"82","line":549,"column":7,"nodeType":"83","messageId":"84","endLine":549,"endColumn":42},{"ruleId":"81","severity":1,"message":"85","line":1,"column":27,"nodeType":"83","messageId":"84","endLine":1,"endColumn":36},{"ruleId":"81","severity":1,"message":"86","line":1,"column":21,"nodeType":"83","messageId":"84","endLine":1,"endColumn":29},{"ruleId":"77","severity":1,"message":"87","line":44,"column":6,"nodeType":"79","endLine":44,"endColumn":22,"suggestions":"88"},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'autoSolveTime', 'grid', 'stopAutoSolve', and 'verifyMsg'. Either include them or remove the dependency array.","ArrayExpression",["91"],"@typescript-eslint/no-unused-vars","'isDoneAndConnectedSpecificDirection' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'currentLevel', 'levels', and 'results'. Either include them or remove the dependency array.",["92"],"no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},"Update the dependencies array to be: [counter, autoSolve, grid, autoSolveTime, verifyMsg, stopAutoSolve]",{"range":"97","text":"98"},"Update the dependencies array to be: [currentLevel, levels, results, verifyResponde]",{"range":"99","text":"100"},[3451,3471],"[counter, autoSolve, grid, autoSolveTime, verifyMsg, stopAutoSolve]",[1181,1197],"[currentLevel, levels, results, verifyResponde]"]